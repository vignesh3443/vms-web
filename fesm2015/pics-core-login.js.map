{"version":3,"file":"pics-core-login.js","sources":["../../../../projects/pics-core/login/src/lib/login.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/urls/rbac-url.config.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/store.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/permissions/permission.store.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/data-store.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/storage.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/local.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/constants/theme-constants.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/http.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/theme.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/profile.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/app.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.actions.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.reducer.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/local-storage.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/init-state-from-local-storage.reducer.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/debug.reducer.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/core.state.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.selectors.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/constants/app-constants.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/alert.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/urls/dynamic-tab-page-url.config.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/dynamic-tab-page-service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/urls/page-header-url.config.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/page-header.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.state.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.store.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/credentials.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@shared/alert/alert.component.ts","../../../../projects/pics-core/login/src/lib/pics-login/@shared/alert/alert.component.html","../../../../projects/pics-core/login/src/lib/pics-login/login/login.component.ts","../../../../projects/pics-core/login/src/lib/pics-login/login/login.component.html","../../../../projects/pics-core/login/src/lib/login.component.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/microstrategy.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/directives/permission.directive.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/directives/show-field.directives.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/directives/directives.module.ts","../../../../projects/pics-core/login/src/lib/pics-login/@shared/alert/alert.module.ts","../../../../projects/pics-core/login/src/lib/pics-login/pics-login.module.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/logger.service.ts","../../../../projects/pics-core/login/src/lib/pics-login/@core/service/auth.guard.ts","../../../../projects/pics-core/login/src/lib/login.module.ts","../../../../projects/pics-core/login/src/public-api.ts","../../../../projects/pics-core/login/src/pics-core-login.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor() { }\r\n}\r\n","export class RoleConfig {\r\n  public static EndPoint = {\r\n    role: {\r\n      getAllUserRole: '/access-control/role',\r\n      createRole: '/access-control/role/create',\r\n      getLandingPage: '/platform/menu/application',\r\n      addPolicyGroup: '/access-control/role',\r\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\r\n      dossier: '/dossier'\r\n    }\r\n  };\r\n}\r\n\r\nexport class UserConfig {\r\n  public static EndPoint = {\r\n    User: {\r\n      getAllUserList: '/org/user',\r\n      getAllUserActiveInactive: '/org/user?includeInactiveUsers=true',\r\n      getUserConfig: '/org/user/getUserPreference/USER_THEME_PREFERENCES/{id}',\r\n      activateUser: '/org/user/activate',\r\n      createUser: '/org/user/create',\r\n      userRole: '/org/user/role',\r\n      managementgroup: '/org/team/managementgroup',\r\n      getAllUserOrgList: '/org/user/organization/',\r\n      saveUserConfig: '/user/saveUserPreference'\r\n    },\r\n    Provider: {\r\n      getProviderList: '/ref/provider',\r\n      searchProviderList: '/ref/provider/search',\r\n      addProviderUser: '/ref/provider/create/account'\r\n    }\r\n  }\r\n}\r\nexport class AttachmentConfig {\r\n  public static EndPoint = {\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\nexport class PolicyGroupConfig {\r\n  public static EndPoint = {\r\n    policyGroup: {\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup',\r\n      getAllPolicyGroupList: '/platform/page-designer/policyGroup/all',\r\n      createPolicyGroup: '/platform/page-designer/policyGroup',\r\n      getOrgPolicyGroups: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    }\r\n  };\r\n}\r\nexport class PermissionsURL {\r\n  public static EndPoints = {\r\n    permission: {\r\n      permissionRoleById: '/access-control/permission/role/{id}',\r\n      pagePermission: '/access-control/permission/page',\r\n      getPermission: '/access-control/permission/{id}',\r\n      createPermission: '/access-control/permission/create',\r\n      updateDeletePermission: '/access-control/permission/{permissionid}',\r\n      getPermissionTree: '/access-control/permission/page/{pageid}/{parentid}',\r\n      getPermissionTypes: '/access-control/permission/type/{applicationid}',\r\n      applicationPermissionsTree: '/access-control/permission/application/{applicationid}'\r\n    },\r\n    page: {\r\n      createPage: '/platform/menu/create',\r\n      updateDeletePage: '/platform/menu/{pageid}',\r\n      AllPageTree: '/platform/menu/tree/{applicationid}'\r\n    }\r\n  };\r\n}\r\nexport class AccessManagementConfig {\r\n  public static EndPoint = {\r\n    Organization: {\r\n      getOrganizationList: '/org/organization/all',\r\n      getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n    }\r\n  };\r\n}\r\nexport class MasterURL {\r\n  public static EndPoints = {\r\n    lookup: {\r\n      createCategory: '/platform/master/lookup/category',\r\n      updateDeleteCategory: '/platform/master/lookup/category/{id}',\r\n      lookup: '/platform/master/lookup/{id}',\r\n      createLookup: '/platform/master/lookup',\r\n      getPermissionRoleById: '/access-control/permission/role/{id}',\r\n      getAllCategoryTree: '/platform/master/lookup/category/tree/{applicationid}',\r\n      getLookupTree: '/platform/master/lookup/tree/{categoryid}',\r\n      getPermissionsTree: '/access-control/permission/application/{applicationid}'\r\n    }\r\n  };\r\n}\r\nexport class AuthURL {\r\n  public static EndPoints = {\r\n    auth: {\r\n      user: {\r\n        conformMail: '/org/auth/forgot-password',\r\n        changePassword: '/org/auth/forgot-password-verification',\r\n        login: '/org/auth/login',\r\n        refreshToken: '/org/auth/refresh-token',\r\n        logout: '/org/auth/logout',\r\n        userInfo: '/org/user/page/list',\r\n        userRole: '/org/user/{id}',\r\n        routeToDynamicPage: '/platform/page-designer/page/organization/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true',\r\n        authMe: '/org/auth/me',\r\n        resetPassword: '/org/user/reset-password',\r\n        orgList: '/org/management-group/organization/tree',\r\n        notification: '/worker/notification',\r\n        workerAvailability: '/worker/updateAvailablity',\r\n        getWorkerAvailability: '/worker/getByCurrentUser',\r\n        userValidate: '/org/auth/user-validate',\r\n        generateLoginUrl: '/org/auth/get-login-url',\r\n        getTokenValidationUrl: '/org/auth/token-validation',\r\n      },\r\n      permission: {\r\n        permissionRoleById: '/access-control/permission/role/{id}',\r\n        pagePermission: '/access-control/permission/page',\r\n        pageLookupPermission: '/access-control/permission/page/lookup'\r\n      },\r\n      microstrategy: {\r\n        login: '/platform/microstrategy/login',\r\n        getLibrary: '/platform/microstrategy/library'\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","export class StorageService {\r\n  constructor(protected Storage: any) {}\r\n\r\n  public getItem(key: string): any {\r\n    return this.Storage.getItem(key);\r\n  }\r\n\r\n  public setItem(key: string, item: any): void {\r\n    return this.Storage.setItem(key, item);\r\n  }\r\n\r\n  public getObj(key: string, safe = true): any {\r\n    try {\r\n      const item = this.getItem(key);\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      if (!safe) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setObj(key: string, item: any): void {\r\n    return this.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  public removeItem(key: string): void {\r\n    this.Storage.removeItem(key);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.Storage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalService extends StorageService {\r\n  constructor() {\r\n    super(window.sessionStorage);\r\n  }\r\n}\r\n","import { FontSet, Theme } from \"./common.entities\";\r\n\r\n\r\nexport const themeList: Theme[] = [\r\n  {\r\n    name: 'Default',\r\n    image: '/assets/images/skin_default.svg',\r\n    key: 'default',\r\n    properties: {\r\n      '--background-color': '#f3f3f3',\r\n      '--header-bg': '#464185',\r\n      '--navigation': '#fff',\r\n      '--primary': '#3e397e',\r\n      '--checkbox-border': '#3e397e',\r\n      '--text-dark': '#000',\r\n      '--label-text': '#2c2863',\r\n      '--hover-text': '#fff',\r\n      '--bg-light': '#fff',\r\n      '--forms': '#fff',\r\n      '--nav-text': '#000',\r\n      '--light-gray': '#696969',\r\n      '--material-icons': '#2c2863',\r\n      '--highlight-list': '#E3F2FD',\r\n      '--table-header': '#f9f9f9',\r\n      '--table-odd': '#f7f7f7',\r\n      '--table-border': '#ddd',\r\n      '--table-hover': '#f6f5ff',\r\n      '--btn': '#3e397e',\r\n      '--menu-panel': '#2c2863',\r\n      '--border-trans': 'transparent',\r\n      '--btn-hover': '#2c2863',\r\n      '--btn-dark': '#2c2863',\r\n      '--dropdown-list': '#fff',\r\n      '--btncancel': '#3e397e',\r\n      '--primary-light': '#6e6b93',\r\n      '--primary-dark': '#282462 ',\r\n      '--light-d-light': '#fff',\r\n      '--ldl-text': '#fff',\r\n      '--light-d-accent': '#fff',\r\n      '--readonly-bg': 'rgb(229 229 229 / 45%)',\r\n\r\n      '--var-icon-font': '\"FILL\" 0, \"wght\" 200, \"GRAD\" 0, \"opsz\" 48',\r\n\r\n      '--rocket-icon': '/assets/images/rocket-ship.svg'\r\n    }\r\n  },\r\n  {\r\n    name: 'Light',\r\n    image: '/assets/images/skin_light.svg',\r\n    key: 'light',\r\n    properties: {\r\n      '--background-color': '#f3f3f3',\r\n      '--header-bg': '#f3f3f3',\r\n      '--navigation': '#fff',\r\n      '--primary': '#343344',\r\n      '--checkbox-border': '#343344',\r\n      '--text-dark': '#000',\r\n      '--label-text': '#000',\r\n      '--hover-text': '#fff',\r\n      '--bg-light': '#fff',\r\n      '--forms': '#fff',\r\n      '--nav-text': '#000',\r\n      '--light-gray': '#696969',\r\n      '--material-icons': '#2c2863',\r\n      '--highlight-list': '#E3F2FD',\r\n      '--table-header': '#f9f9f9',\r\n      '--table-odd': '#fff',\r\n      '--table-border': '#ddd',\r\n      '--table-hover': '#f5f5f5',\r\n      '--btn': '#343344',\r\n      '--menu-panel': '#fff',\r\n      '--border-trans': 'transparent',\r\n      '--btn-hover': '#2c2863',\r\n      '--btn-dark': '#343344',\r\n      '--dropdown-list': '#fff',\r\n      '--btncancel': '#343344',\r\n      '--primary-light': '#6e6b93',\r\n      '--primary-dark': '#f5f5f5',\r\n      '--light-d-light': '#343344',\r\n      '--ldl-text': '#000',\r\n      '--light-d-accent': '#343344',\r\n      '--readonly-bg': 'rgb(229 229 229 / 45%)',\r\n\r\n      '--var-icon-font': '\"FILL\" 0, \"wght\" 500, \"GRAD\" 0, \"opsz\" 48',\r\n\r\n      '--rocket-icon': '/assets/images/rocket-ship.svg'\r\n    }\r\n  },\r\n  {\r\n    name: 'Dark',\r\n    image: '/assets/images/skin_dark.svg',\r\n    key: 'dark',\r\n    properties: {\r\n      '--background-color': '#1a2035',\r\n      '--header-bg': '#1a2035',\r\n      '--navigation': '#272e46',\r\n      '--nav-text': '#fff',\r\n      '--light-gray': '#a3a3a3',\r\n      '--primary': '#f3266b',\r\n      '--checkbox-border': '#8b8989',\r\n      '--text-dark': '#ddd',\r\n      '--label-text': '#fff',\r\n      '--hover-text': '#fff',\r\n      '--bg-light': '#272e46',\r\n      '--material-icons': '#fff',\r\n      '--forms': '#272e46',\r\n      '--highlight-list': '#364060',\r\n      '--table-header': '#364060',\r\n      '--table-odd': '#2f364c',\r\n      '--table-border': '#3e414c',\r\n      '--table-hover': '#3f465e',\r\n      '--btn': '#f3266b',\r\n      '--menu-panel': '#272e46',\r\n      '--border-trans': 'transparent',\r\n      '--btn-hover': '#f3266b',\r\n      '--btn-dark': '#2c2863',\r\n      '--dropdown-list': '#29314a',\r\n      '--btncancel': 'transparent',\r\n      '--primary-light': '#a75872',\r\n      '--primary-dark': '#202534',\r\n      '--light-d-light': '#fff',\r\n      '--ldl-text': '#fff',\r\n      '--light-d-accent': '#a75872',\r\n      '--readonly-bg': 'rgb(96 96 96 / 45%)',\r\n\r\n      '--var-icon-font': '\"FILL\" 0, \"wght\" 200, \"GRAD\" 0, \"opsz\" 48',\r\n\r\n      '--rocket-icon': '/assets/images/rocket-ship_light.svg'\r\n    }\r\n  }\r\n];\r\n\r\nexport const FontSetList: FontSet[] = [\r\n  {\r\n    name: 'Medium',\r\n    key: 'medium',\r\n    properties: {\r\n      '--base-font-size': '13px',\r\n      '--font-11': '11px',\r\n      '--font-12': '12px',\r\n      '--font-13': '13px',\r\n      '--font-14': '14px',\r\n      '--font-15': '15px',\r\n      '--font-16': '16px',\r\n      '--font-17': '17px',\r\n      '--font-18': '18px',\r\n      '--font-19': '19px',\r\n      '--font-20': '20px',\r\n      '--font-21': '21px',\r\n      '--font-22': '22px',\r\n      '--font-24': '24px',\r\n      '--font-26': '26px'\r\n    }\r\n  },\r\n  {\r\n    name: 'Large',\r\n    key: 'large',\r\n    properties: {\r\n      '--base-font-size': '15px',\r\n      '--font-11': '13px',\r\n      '--font-12': '14px',\r\n      '--font-13': '15px',\r\n      '--font-14': '16px',\r\n      '--font-15': '17px',\r\n      '--font-16': '18px',\r\n      '--font-17': '19px',\r\n      '--font-18': '20px',\r\n      '--font-19': '21px',\r\n      '--font-20': '22px',\r\n      '--font-21': '23px',\r\n      '--font-24': '28px',\r\n      '--font-26': '30px'\r\n    }\r\n  }\r\n];\r\nexport const fontRangeSetList: FontSet[] = [\r\n  {\r\n    name: '13',\r\n    key: '13',\r\n    properties: {\r\n      '--base-font-size': '13px',\r\n    }\r\n  },\r\n  {\r\n    name: '14',\r\n    key: '14',\r\n    properties: {\r\n      '--base-font-size': '14px',\r\n      '--font-14': '15px',\r\n      '--font-12': '13px',\r\n      '--font-18': '19px',\r\n    }\r\n  },\r\n  {\r\n    name: '15',\r\n    key: '15',\r\n    properties: {\r\n      '--base-font-size': '15px',\r\n      '--font-14': '16px',\r\n      '--font-12': '14px',\r\n      '--font-18': '20px',\r\n    }\r\n  },\r\n  {\r\n    name: '16',\r\n    key: '16',\r\n    properties: {\r\n      '--base-font-size': '16px',\r\n      '--font-14': '17px',\r\n      '--font-12': '15px',\r\n      '--font-18': '21px',\r\n    }\r\n  },\r\n  {\r\n    name: '17',\r\n    key: '17',\r\n    properties: {\r\n      '--base-font-size': '17px',\r\n      '--font-14': '18px',\r\n      '--font-12': '16px',\r\n      '--font-18': '22px',\r\n    }\r\n  },\r\n  {\r\n    name: '18',\r\n    key: '18',\r\n    properties: {\r\n      '--base-font-size': '18px',\r\n      '--font-14': '19px',\r\n      '--font-12': '17px',\r\n      '--font-18': '23px',\r\n    }\r\n  },\r\n  {\r\n    name: '19',\r\n    key: '19',\r\n    properties: {\r\n      '--base-font-size': '19px',\r\n      '--font-14': '20px',\r\n      '--font-12': '18px',\r\n      '--font-18': '24px',\r\n    }\r\n  },\r\n  {\r\n    name: '20',\r\n    key: '20',\r\n    properties: {\r\n      '--base-font-size': '20px',\r\n      '--font-14': '21px',\r\n      '--font-18': '24px',\r\n    }\r\n  }\r\n];\r\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { map } from 'rxjs/operators';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n    RBACORG: any;\r\n    overrideUrl = true;\r\n    errorData!: HttpErrorResponse;\r\n    baseUrl = '';\r\n    tokenKey: any;\r\n    public headers = new HttpHeaders()\r\n      .set('Accept', 'application/json')\r\n      .set('Content-Type', 'application/json')\r\n      .set('role', 'role=CP_PUBLIC');\r\n\r\n    public showSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    public outsideShowSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    url1: string;\r\n    url: any;\r\n    constructor(private http: HttpClient, private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n        if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.url = this.RBACORG['apiHost'] ? this.RBACORG['apiHost'] : 'http://localhost:3000/api';\r\n          this.tokenKey = this.RBACORG['tokenKey'];\r\n        }\r\n      });\r\n      this.url1 = '';\r\n    }\r\n\r\n    get(apiRoute: string) {\r\n      return this.http.get(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    post(apiRoute: string, body: any) {\r\n      return this.http.post(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    put(apiRoute: string, body: any) {\r\n      return this.http.put(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    patch(apiRoute: string, body?: any) {\r\n      return this.http.patch(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    delete(apiRoute: string) {\r\n      return this.http.delete(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n\r\n    getHttpHeaders(): HttpHeaders {\r\n      return new HttpHeaders().set('key', 'value');\r\n    }\r\n    getHttpNewHeaders(): HttpHeaders {\r\n      return this.headers.set('Authorization', `Bearer ${this.getToken()}`);\r\n    }\r\n    getAttachmentHttpHeaders(contentType: any): HttpHeaders {\r\n      return new HttpHeaders().set('Content-Type', contentType).set('x-ms-blob-type', 'BlockBlob');\r\n    }\r\n    putUpload(apiRoute: string, body: any, contentType: any) {\r\n      return this.http.put(`${this.url1 + apiRoute}`, body, { headers: this.getAttachmentHttpHeaders(contentType) });\r\n    }\r\n    getAuthValidation(apiRoute,token) {\r\n      return this.http.get(`${this.url + apiRoute}`, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n    getAuthAccessKey(apiRoute, body) {\r\n      return this.http.post(`${this.url + apiRoute}`, body, {\r\n        headers: this.getHttpNewHeaders()\r\n      });\r\n    }\r\n    putupload2(apiRoute: string, body: any, contenttype: any): Observable<any> {\r\n      return this.http\r\n        .put(`${this.url1 + apiRoute}`, body, {\r\n          headers: this.getAttachmentHttpHeaders(contenttype),\r\n          observe: 'response'\r\n        })\r\n        .pipe(\r\n          map(data => {\r\n            return data;\r\n          })\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     * @param apiRoute\r\n     * This function will download the stream file from the API service.\r\n     * No HTTP required for this stream. So used Window.location.href to download the file\r\n     */\r\n    getFormDownloaded(apiRoute: string) {\r\n      window.location.href = `${this.url + apiRoute}`;\r\n    }\r\n    //common http service(optional)\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (error.error instanceof ErrorEvent) {\r\n        // Client-side errors\r\n        errorMessage = `Error: ${error.error.message}`;\r\n      } else {\r\n        // Server-side errors\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${\r\n          error?.error?.message ? error?.error?.message : error.message\r\n        }`;\r\n      }\r\n      return throwError(errorMessage);\r\n    }\r\n    getToken(): any {\r\n      const token = this.tokenKey ? this.tokenKey : 'jwt-token';\r\n      return sessionStorage.getItem(token);\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FontSet, Theme } from '../constants/common.entities';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private active?: any;\r\n  private activeFont?: any;\r\n\r\n  constructor() {\r\n    // This is intentional\r\n  }\r\n\r\n  setActiveTheme(theme: Theme): void {\r\n    this.active = theme;\r\n    Object.keys(this.active.properties).forEach(property => {\r\n      document.documentElement.style.setProperty(property, this.active.properties[property]);\r\n    });\r\n  }\r\n\r\n  setActiveFont(Fontset: FontSet): void {\r\n    this.activeFont = Fontset;\r\n    if(this.activeFont){\r\n      Object.keys(this.activeFont.properties).forEach(property => {\r\n        document.documentElement.style.setProperty(property, this.activeFont.properties[property]);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { HttpService } from './http.service';\r\nimport { ThemeService } from './theme.service';\r\nimport { LocalService } from './local.service';\r\nimport { FontSetList, themeList } from '../constants/theme-constants';\r\nimport { UserConfig } from '../urls/rbac-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  profileImage: Subject<any> = new Subject();\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private themeService: ThemeService,\r\n    private localstorage: LocalService\r\n  ) {}\r\n\r\n  setUserPreference() {\r\n    const user_id = this.localstorage.getItem('id');\r\n    if (user_id) {\r\n      this.getUserPreference(user_id).subscribe((res: any) => {\r\n        if (res.data && res.data?.config) {\r\n          const configArray = JSON.parse(res.data.config);\r\n          this.setTheme(configArray.theme);\r\n          this.setFont(configArray.font);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  setTheme(event) {\r\n    this.localstorage.setItem('SELECTED_THEME', event);\r\n    const selectedTheme = themeList.filter(theme => theme.key === event)[0];\r\n    this.themeService.setActiveTheme(selectedTheme);\r\n    console.log('Selected Theme:', selectedTheme.key);\r\n  }\r\n  setFont(event) {\r\n    this.localstorage.setItem('SELECTED_FONT', event);\r\n    const selectedFont = FontSetList.filter(fontSet => fontSet.key === event)[0];\r\n    this.themeService.setActiveFont(selectedFont);\r\n  }\r\n\r\n  getProfile(img: any) {\r\n    this.profileImage.next(img);\r\n  }\r\n\r\n  getAllUserList(key?: string): Observable<any> {\r\n    return this.httpService.get(`${UserConfig.EndPoint.User.getAllUserList}/${key}`);\r\n  }\r\n  getAllUserOrgList(orgid: any) {\r\n    return this.httpService.get(UserConfig.EndPoint.User.getAllUserOrgList + orgid);\r\n  }\r\n  getUserPreference(id) {\r\n    return this.httpService.get(UserConfig.EndPoint.User.getUserConfig.replace('{id}', id));\r\n  }\r\n  updateUser(data: any, userid: string) {\r\n    return this.httpService.patch(`${UserConfig.EndPoint.User.getAllUserList}/${userid}/updateUserDetails`, data);\r\n  }\r\n  saveUserPreference(data) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.saveUserConfig, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  currentState: Subject<any> = new Subject();\r\n  currentValue = new BehaviorSubject<any>({});\r\n  getValue = this.currentValue.asObservable();\r\n  addValue(key: string, value: string) {\r\n    this.currentState.next({ key, value });\r\n  }\r\n\r\n  setValue(key: string, value: string) {\r\n    this.currentValue.next({ key, value });\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const authLogout = createAction('[Auth] Logout');\r\n\r\nexport const authLogin = createAction('[Auth] Login', props<{ username: string; password: string }>());\r\n\r\nexport const authLoginSuccess = createAction('[Auth] Login Success', props<{ isAuthenticated: boolean }>());\r\n\r\nexport const authLoginFailure = createAction('[Auth] Login Failure', props<{ isAuthenticated: boolean; error: any }>());\r\n","\r\nimport { AuthState } from '../constants/common.entities';\r\nimport { authLogin, authLoginFailure, authLoginSuccess, authLogout } from './auth.actions';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nexport const initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  pages: []\r\n};\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(authLogin, state => ({\r\n    ...state,\r\n    loading: true,\r\n    error: null,\r\n    isAuthenticated: false\r\n  })),\r\n  on(authLoginSuccess, (state, { isAuthenticated }) => {\r\n    console.log(isAuthenticated);\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      isAuthenticated,\r\n      error: null\r\n    };\r\n  }),\r\n  on(authLoginFailure, (state, { isAuthenticated, error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    isAuthenticated,\r\n    error\r\n  })),\r\n  on(authLogout, state => ({\r\n    ...state,\r\n    loading: false,\r\n    error: null,\r\n    isAuthenticated: false\r\n  }))\r\n);\r\n\r\nexport function authReducer(state: AuthState | undefined, action: Action): AuthState {\r\n  return reducer(state, action);\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst APP_PREFIX = 'GAMED-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {\r\n    // This is intentional\r\n  }\r\n\r\n  static loadInitialState() {\r\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\r\n      if (storageKey.includes(APP_PREFIX)) {\r\n        const stateKeys = storageKey\r\n          .replace(APP_PREFIX, '')\r\n          .toLowerCase()\r\n          .split('.')\r\n          .map(key =>\r\n            key\r\n              .split('-')\r\n              .map((token, index) => (index === 0 ? token : token.charAt(0).toUpperCase() + token.slice(1)))\r\n              .join('')\r\n          );\r\n        let currentStateRef = state;\r\n        stateKeys.forEach((key, index) => {\r\n          if (index === stateKeys.length - 1) {\r\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey) || '');\r\n            return;\r\n          }\r\n          currentStateRef[key] = currentStateRef[key] || {};\r\n          currentStateRef = currentStateRef[key];\r\n        });\r\n      }\r\n      return state;\r\n    }, {});\r\n  }\r\n\r\n  setItem(key: string, value: any) {\r\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return localStorage.getItem(`${APP_PREFIX}${key}`) || '';\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    const retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","\r\nimport { ActionReducer, INIT, UPDATE } from '@ngrx/store';\r\nimport { AppState } from './core.state';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\nexport function initStateFromLocalStorage(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\r\n      return { ...newState, ...LocalStorageService.loadInitialState() };\r\n    }\r\n    return newState;\r\n  };\r\n}\r\n","\r\nimport { ActionReducer } from '@ngrx/store';\r\nimport { AppState } from './core.state';\r\n\r\nexport function debug(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    console.log(`[DEBUG] action: ${action.type}`, {\r\n      payload: (<any>action).payload,\r\n      oldState: state,\r\n      newState\r\n    });\r\n    return newState;\r\n  };\r\n}\r\n","\r\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\r\nimport { ActionReducerMap, createFeatureSelector, MetaReducer } from '@ngrx/store';\r\nimport { authReducer } from './auth.reducer';\r\n\r\nimport { AuthState } from '../constants/common.entities';\r\nimport { initStateFromLocalStorage } from './init-state-from-local-storage.reducer';\r\nimport { RouterStateUrl } from './router.state';\r\nimport { debug } from './debug.reducer';\r\n\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  auth: authReducer,\r\n  router: routerReducer\r\n};\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] = [initStateFromLocalStorage];\r\n\r\n// if (environment['production']) {\r\n  metaReducers.unshift(debug);\r\n// }\r\n\r\nexport const selectAuthState = createFeatureSelector<AuthState>('auth');\r\n\r\nexport const selectRouterState = createFeatureSelector<RouterReducerState<RouterStateUrl>>('router');\r\n\r\nexport interface AppState {\r\n  auth: AuthState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\nexport interface State extends AppState {\r\n  app: AppState;\r\n}\r\n","\r\nimport { createSelector } from '@ngrx/store';\r\nimport { AuthState } from '../constants/common.entities';\r\nimport { selectAuthState } from './core.state';\r\n\r\n\r\nexport const selectAuth = createSelector(selectAuthState, (state: AuthState) => state);\r\n","export class AppConstants {\r\n  public static errorMessage = 'Something went wrong!';\r\n  public static regexEmail = '^[0-9a-zA-Z.-_+-]+[@][0-9a-zA-Z.-_+]+[.][0-9a-zA-Z]{2,}$';\r\n  public static tempPasswordReset = 'TEMP_PASSWORD_RESET';\r\n  public static passwordExpired = 'PASSWORD_EXPIRED';\r\n  public static errorList = [\r\n    'Have at least one (1) number',\r\n    'Have at least one (1) special character',\r\n    'Have at least one (1) upper case letter',\r\n    'Have at least one (1) lower case letter',\r\n    'Contain a minimum of fourteen (14) characters'\r\n  ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","export class DynamicTabPageConfig {\r\n  public static EndPoint = {\r\n    Page: {\r\n      getActivePage: '/pageversion/{id}',\r\n      getPage: '/page',\r\n      getPageById: '/platform/page-designer/page/{id}',\r\n      getResponseByPageId: '/app/formresponse/{responseId}/getByPageId/{pageId}',\r\n      createFormResponse: '/app/formresponse/create',\r\n      patchFormResponse: '/app/formresponse',\r\n      updateFormResponse: '/pagedata/'\r\n    },\r\n    Narrative: {\r\n      getIncidentListById: '/incident/listBySourceId/{id}'\r\n    },\r\n    Notification: {\r\n      createSurveyConfig: '/surveyconfig/usersurvey/{id}/{status}/{pagedataid}'\r\n    },\r\n    Finance: {\r\n      exportDocument: '/integrated/exportDocuments/',\r\n      uploadDocument: 'document/upload',\r\n      getUniqueId: '/uniqueIdLogic/'\r\n    },\r\n    Attachments: {\r\n      createAttachment: '/app/formresponseattachment/create'\r\n    }\r\n  };\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgxfUploaderService } from 'ngxf-uploader';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpService } from './http.service';\r\nimport { DynamicTabPageConfig } from '../urls/dynamic-tab-page-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicTabPageService {\r\n  private isPageDesign = new BehaviorSubject<boolean>(false);\r\n  observePage = this.isPageDesign.asObservable();\r\n  constructor(private uploadService: NgxfUploaderService, private httpService: HttpService) {}\r\n\r\n  getActivePage(tabPageId: any, permission?: boolean) {\r\n    return this.httpService.get(\r\n      `${DynamicTabPageConfig.EndPoint.Page.getActivePage.replace('{id}', tabPageId)}${\r\n        permission ? '?applyPermissions=true' : ''\r\n      }`\r\n    );\r\n  }\r\n\r\n  getDynamicPage(pageId: any) {\r\n    return this.httpService.get(`${DynamicTabPageConfig.EndPoint.Page.getPage}/${pageId}`);\r\n  }\r\n\r\n  getPageById(pageId: any) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Page.getPageById.replace('{id}', pageId));\r\n  }\r\n\r\n  getListBySourceId(sourceId: any) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Narrative.getIncidentListById.replace('{id}', sourceId));\r\n  }\r\n\r\n  getResponseByPageId(responseId: any, pageId: any) {\r\n    return this.httpService.get(\r\n      DynamicTabPageConfig.EndPoint.Page.getResponseByPageId\r\n        .replace('{responseId}', responseId)\r\n        .replace('{pageId}', pageId)\r\n    );\r\n  }\r\n\r\n  createFormResponse(id: any, requestData) {\r\n    return this.httpService.post(\r\n      id\r\n        ? DynamicTabPageConfig.EndPoint.Page.updateFormResponse\r\n        : DynamicTabPageConfig.EndPoint.Page.createFormResponse,\r\n      requestData\r\n    );\r\n  }\r\n\r\n  createUserSurvey(history, Id: any) {\r\n    return this.httpService.post(\r\n      DynamicTabPageConfig.EndPoint.Notification.createSurveyConfig\r\n        .replace('{id}', history?.state?.usersurveyid)\r\n        .replace('{status}', 'Completed')\r\n        .replace('{pagedataid}', Id),\r\n      {}\r\n    );\r\n  }\r\n\r\n  updateFormResponse(id: any, requestData: any) {\r\n    return this.httpService.patch(`${DynamicTabPageConfig.EndPoint.Page.patchFormResponse}/${id}`, requestData);\r\n  }\r\n\r\n  exportReport(data: any) {\r\n    return this.httpService.post(DynamicTabPageConfig.EndPoint.Finance.exportDocument, data);\r\n  }\r\n\r\n  uploadFile(file: any) {\r\n    return this.uploadService.upload({\r\n      url: this.httpService.baseUrl + '/' + DynamicTabPageConfig.EndPoint.Finance.uploadDocument,\r\n      headers: new HttpHeaders()\r\n        .set('ctype', 'file')\r\n        .set('uniqueid', '6b61ac1e-221a-495c-957b-ad85f65be25a')\r\n        .set('role', 'role=CP_PUBLIC'),\r\n      files: file,\r\n      process: true\r\n    });\r\n  }\r\n\r\n  getUniqueId(api: string) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Finance.getUniqueId + api);\r\n  }\r\n\r\n  changePage(page) {\r\n    this.isPageDesign.next(page);\r\n  }\r\n\r\n  createFormResponseAttachment(data) {\r\n    return this.httpService.post(DynamicTabPageConfig.EndPoint.Attachments.createAttachment, data);\r\n  }\r\n}\r\n","export class PageHeaderURL {\r\n  public static EndPoints = {\r\n    page: {\r\n      getAuthorizedPages: '/platform/page-designer/page/organization/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { PageHeaderURL } from '../urls/page-header-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PageHeaderService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  getAuthorizedPages(orgid) {\r\n    return this.httpService.get(PageHeaderURL.EndPoints.page.getAuthorizedPages.replace('{orgid}', orgid));\r\n  }\r\n}\r\n","import { UserDto } from \"../constants/common.entities\";\r\n\r\n\r\nexport class AuthState {\r\n  user?: UserDto;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { UserDto } from '../constants/common.entities';\r\nimport { HttpService } from './http.service';\r\nimport { AuthState } from './auth.state';\r\nimport { AuthURL } from '../urls/rbac-url.config';\r\nimport { Store } from './store.service';\r\n\r\n@Injectable()\r\nexport class AuthStore extends Store<AuthState> {\r\n  constructor(private httpService: HttpService) {\r\n    super(new AuthState());\r\n  }\r\n\r\n  addAuthInfo(user: UserDto): void {\r\n    this.setState({ ...this.state, user });\r\n  }\r\n\r\n  getAuthInfo(): Observable<any> {\r\n    console.log(this.state);\r\n    if (this.state.user) {\r\n      return of(this.state.user);\r\n    } else {\r\n      return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n        tap(([user]) => {\r\n          return user;\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  // Customize received credentials here\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\nconst credentialsKey = 'jwt-token';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredentialsService {\r\n  private token: string | null = null;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this.token = savedCredentials;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  /**\r\n   * Gets the user credentials.\r\n   * @return The user credentials or null if the user is not authenticated.\r\n   */\r\n  get credentials(): string | null {\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * Sets the user credentials.\r\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\r\n   * Otherwise, the credentials are only persisted for the current session.\r\n   * @param credentials The user credentials.\r\n   * @param remember True to remember credentials across sessions.\r\n   */\r\n  setCredentials(credentials?: string) {\r\n    this.token = credentials || null;\r\n    if (credentials) {\r\n      sessionStorage.setItem(credentialsKey, credentials);\r\n    } else {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, forkJoin, of } from 'rxjs';\r\nimport { AuthURL } from '../urls/rbac-url.config';\r\nimport { AlertService } from './alert.service';\r\nimport { HttpService } from './http.service';\r\nimport { DynamicTabPageService } from './dynamic-tab-page-service';\r\nimport { PageHeaderService } from './page-header.service';\r\nimport { AuthStore } from './auth.store';\r\nimport { CredentialsService } from './credentials.service';\r\nimport { LocalService } from './local.service';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\nimport { AppConstants } from '../constants/app-constants';\r\n\r\n@Injectable(\r\n{\r\n  providedIn: 'root'\r\n}\r\n)\r\nexport class AuthService {\r\n  sharedInfo: any;\r\n  alertService: AlertService;\r\n  dynamicTabPageService: DynamicTabPageService;\r\n  pageHeaderService: PageHeaderService;\r\n  constructor(\r\n    injector: Injector,\r\n    private httpService: HttpService,\r\n    private store: AuthStore,\r\n    private _router: Router,\r\n    private credentialsService: CredentialsService,\r\n    private localstore: LocalService\r\n  ) {\r\n    this.alertService = injector.get<AlertService>(AlertService);\r\n    this.dynamicTabPageService = injector.get<DynamicTabPageService>(DynamicTabPageService);\r\n    this.pageHeaderService = injector.get<PageHeaderService>(PageHeaderService);\r\n  }\r\n\r\n  public orgInfo = new BehaviorSubject<any>('');\r\n  currentOrgInfo = this.orgInfo.asObservable();\r\n\r\n  public currentMenu = new BehaviorSubject<any>('');\r\n  currentMenuInfo = this.currentMenu.asObservable();\r\n\r\n  feedOrgInfo(data: any) {\r\n    this.orgInfo.next(data);\r\n  }\r\n  getCurrentMenu(data: any) {\r\n    this.currentMenu.next(data);\r\n  }\r\n\r\n  getUserOrgList() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.orgList);\r\n  }\r\n\r\n  getUnNotified() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.notification);\r\n  }\r\n\r\n  updateUnNotified(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.notification, data);\r\n  }\r\n\r\n  updateWorkerAvailability(data) {\r\n    return this.httpService.patch(AuthURL.EndPoints.auth.user.workerAvailability, data);\r\n  }\r\n\r\n  getWorkerAvailability() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.getWorkerAvailability);\r\n  }\r\n\r\n  getMstrToken() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.microstrategy.login).pipe(res => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public login(email: string, password: string, otp: string): Observable<any> {\r\n    const body = {\r\n      email: email,\r\n      password: password,\r\n      secret: otp ? otp : ''\r\n    };\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.login, body).pipe(\r\n      mergeMap((res: any): Observable<[any]> => {\r\n        if (res['data'] === 'MFA_CODE_SEND') {\r\n          return of(res['data']);\r\n        }\r\n        if ([AppConstants.tempPasswordReset, AppConstants.passwordExpired].includes(res?.data?.action)) {\r\n          sessionStorage.setItem('email', res.data.user?.email);\r\n          sessionStorage.setItem('id', res.data.user?.id);\r\n          return of(res);\r\n        }\r\n        this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n        sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n        sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n        sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n        sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n        return this.getUserInfo();\r\n      })\r\n    );\r\n  }\r\n\r\n  public refreshToken(platform = 'aws') {\r\n    const email = sessionStorage.getItem('email');\r\n    const refreshToken = sessionStorage.getItem('refreshToken');\r\n    const body = {\r\n      email,\r\n      refreshToken\r\n    };\r\n    if(platform === 'aws') {\r\n      return this.httpService.post(AuthURL.EndPoints.auth.user.refreshToken, body).pipe(\r\n        mergeMap((res: any): any => {\r\n          this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n          sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n          sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n          sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n          sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n          console.log('new token generated...', res['data'].idToken.jwtToken);\r\n          return [res['data'].idToken.jwtToken];\r\n        })\r\n      );\r\n    }\r\n    else {\r\n      return this.httpService.post(AuthURL.EndPoints.auth.user.refreshToken, body).pipe(\r\n        mergeMap((res: any): any => {\r\n          this.credentialsService.setCredentials(res['data'].token);\r\n          sessionStorage.setItem('refreshToken', res['data'].refreshToken);\r\n          return [res['data'].token];\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public resetLoggedIn() {\r\n    this.httpService\r\n      .post(AuthURL.EndPoints.auth.user.logout, {\r\n        email: sessionStorage.getItem('email')\r\n      })\r\n      .subscribe(() => {\r\n        console.log('Logged in flag reset successful.');\r\n      });\r\n  }\r\n\r\n  public logout() {\r\n    this._router.navigate(['/login']);\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n  }\r\n\r\n  public getUserInfo(): Observable<[any]> {\r\n    return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n      tap(([user]) => {\r\n        this.store.addAuthInfo(user['data']);\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getUserRole(id): Observable<any> {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.userRole.replace('{id}', id)).pipe(res => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public routeToDynamicPage(orgid): Observable<any> {\r\n    return this.httpService\r\n      .get(AuthURL.EndPoints.auth.user.routeToDynamicPage.replace('{orgid}', orgid))\r\n      .pipe((res: any) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  getAuthMe() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.authMe);\r\n  }\r\n\r\n  ResetPassword(data: any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.resetPassword, data);\r\n  }\r\n\r\n  public getRoleKey() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.role) {\r\n      return user.role.rolekey;\r\n    }\r\n  }\r\n\r\n  public isAdmin() {\r\n    return 'ADM' === this.getRoleKey();\r\n  }\r\n\r\n  public getOrgID() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.userWorkInfo && user.userWorkInfo.organization && user.userWorkInfo.organization.id) {\r\n      return user.userWorkInfo.organization.id;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  conformMail(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.conformMail, data);\r\n  }\r\n\r\n  changePassword(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.changePassword, data);\r\n  }\r\n\r\n  setSharedMessage(data) {\r\n    this.sharedInfo = data;\r\n  }\r\n\r\n  getSharedMessage() {\r\n    return this.sharedInfo;\r\n  }\r\n\r\n  async checkDynamicPagePermission(pageId: any) {\r\n    const dynamicPages = await this.getAuthorizedPages();\r\n    if (pageId) {\r\n      this.dynamicTabPageService.getPageById(pageId).subscribe(res => {\r\n        if (dynamicPages.some(page => page.id === res['data'][0].activeVersion.id)) {\r\n          this._router.navigate([`pages/dynamic-search/search/${res['data'][0].activeVersion.id}`]);\r\n        } else {\r\n          this.alertService.error(\r\n            `You don't have permissions for ${res['data'][0].activeVersion.pagename} . Please Contact Administrator`\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.alertService.error(\r\n        'You don\\'t have permissions to perform the following operations .Please Contact Administrator'\r\n      );\r\n    }\r\n  }\r\n\r\n  getCurrentOrg() {\r\n    return this.getUserOrgList()\r\n      .toPromise()\r\n      .then(response => {\r\n        return response['data'][0].id;\r\n      });\r\n  }\r\n\r\n  async getAuthorizedPages() {\r\n    const orgId = await this.getCurrentOrg();\r\n    return this.pageHeaderService\r\n      .getAuthorizedPages(orgId)\r\n      .toPromise()\r\n      .then(\r\n        response => {\r\n          const dynamicPage = response['data'].filter(page => {\r\n            return (\r\n              page.activeVersion &&\r\n              (page.activeVersion.gridconfig || page.activeVersion.templatejson || this.getCustomPage(page))\r\n            );\r\n          });\r\n          return dynamicPage.map(page => ({\r\n            id: page.activeVersion.id,\r\n            name: page.activeVersion.pagename,\r\n            activeVersion: page.activeVersion\r\n          }));\r\n        },\r\n        _error => this.alertService.error(AppConstants.errorMessage)\r\n      );\r\n  }\r\n\r\n  getCustomPage(page) {\r\n    if (page.activeVersion.tabconfig) {\r\n      const routingTab = JSON.parse(page.activeVersion.tabconfig).filter(x => x.type === 'ROUTING');\r\n      return routingTab.length && page;\r\n    }\r\n  }\r\n  public validateToken(token: string,requestObject: any): Observable<any> {\r\n    this.credentialsService.setCredentials(token);\r\n    return this.httpService.getAuthAccessKey(AuthURL.EndPoints.auth.user.getTokenValidationUrl,requestObject).pipe(\r\n      mergeMap((res: any): Observable<[any]> => {\r\n        if (res['data'] === 'MFA_CODE_SEND') {\r\n          return of(res['data']);\r\n        }\r\n        this.credentialsService.setCredentials(res['data'].token);\r\n        sessionStorage.setItem('refreshToken', res['data'].refreshToken);\r\n        sessionStorage.setItem('email', res['data'].email);\r\n        sessionStorage.setItem('id', res['data'].id);\r\n        sessionStorage.setItem('username', res['data'].name);\r\n        return this.getUserInfo();\r\n      })\r\n    );\r\n  }\r\n  generateLoginUrl() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.generateLoginUrl)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\r\nconst DISPLAY_IN_SECONDS = 8;\r\n@Component({\r\n  // moduleId: module.id,\r\n  selector: 'app-alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (!alert) {\r\n        // clear alerts when an empty alert is received\r\n        this.alerts = [];\r\n        return;\r\n      }\r\n\r\n      // add alert to array\r\n      this.alerts.push(alert);\r\n      // remove alert after 5 seconds\r\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\r\n    });\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    this.alerts = this.alerts.filter(x => x !== alert);\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    // return css class based on alert type\r\n    switch (alert.type) {\r\n      case AlertType.Success:\r\n        return 'alert alert-success';\r\n      case AlertType.Error:\r\n        return 'alert alert-danger';\r\n      case AlertType.Info:\r\n        return 'alert alert-info';\r\n      case AlertType.Warning:\r\n        return 'alert alert-warning';\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\r\n  {{ alert.message }}\r\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n</div>\r\n","import { Component, Injector,EventEmitter,Output, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthState } from '../@core/constants/common.entities';\r\nimport { LocalService } from '../@core/service/local.service';\r\nimport { ProfileService } from '../@core/service/profile.service';\r\nimport { AppService } from '../@core/service/app.service';\r\nimport { AppState } from '../@core/service/core.state';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertService } from '../@core/service/alert.service';\r\nimport { AuthService } from '../@core/service/auth.service';\r\nimport { selectAuth } from '../@core/service/auth.selectors';\r\nimport { AppConstants } from '../@core/constants/app-constants';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { HttpService } from '../@core/service/http.service';\r\ninterface City {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [MessageService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @ViewChild('showhideinput') input;\r\n  @Input() public LOGININFO?: any;\r\n  @Input() public RBACORG?: any;\r\n  @Output() passwordExpired = new EventEmitter();\r\n  @Output() loginSuccessful = new EventEmitter();\r\n  @Output() verifyingOtp = new EventEmitter();\r\n  value3!: string;\r\n  cities: City[] = [];\r\n  selectedCity1!: City;\r\n  loginForm!: FormGroup;\r\n  otpForm!: FormGroup;\r\n  show!: boolean;\r\n  disabledLoginPage!: boolean;\r\n  submitStatus!: string;\r\n  submitSecretStatus!: string;\r\n  errorStatus?: string;\r\n  destory$ = new Subject<void>();\r\n  closeResult = '';\r\n  isAuthenticated$!: Observable<AuthState>;\r\n  localstorage: LocalService;\r\n  primengConfig: PrimeNGConfig;\r\n  isOtpSent: boolean;\r\n  profileService: ProfileService;\r\n  appService: AppService;\r\n  private DEFAULT_PASSWORD_RESET = 'TEMP_PASSWORD_RESET';\r\n  isOTP: boolean = false;\r\n  enterOTP: string;\r\n  userEmail: any;\r\n\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private store$: Store<AppState>,\r\n    private _router: Router,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private alertService: AlertService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private httpServie: HttpService\r\n  ) {\r\n    this.profileService = injector.get<ProfileService>(ProfileService);\r\n    this.localstorage = injector.get<LocalService>(LocalService);\r\n    this.primengConfig = injector.get<PrimeNGConfig>(PrimeNGConfig);\r\n    this.appService = injector.get<AppService>(AppService);\r\n    this.submitStatus = 'LOGIN';\r\n    this.disabledLoginPage = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.initializeForm();\r\n    this.getSessionDetails();\r\n    this.primengConfig.ripple = true;\r\n    this.isAuthenticated$ = this.store$.pipe(select(selectAuth));\r\n    this.isAuthenticated$.subscribe((res: any) => {\r\n        if (res.isAuthenticated) {\r\n          const routeToAdmin = res.pages.some(a => a.name === 'Application Management');\r\n          if (res?.action === this.DEFAULT_PASSWORD_RESET) {\r\n            const query = {\r\n              queryParams: {\r\n                isTempPassword: res.action === this.DEFAULT_PASSWORD_RESET,\r\n                email: this.loginForm.value.email.trim()\r\n              }\r\n            };\r\n            this._router.navigate(['/auth/change-password', query]);\r\n          } else if (routeToAdmin) {\r\n            this._router.navigate(['/pages/rbac']);\r\n          } else {\r\n            this._router.navigate(['/pages/page-design/list']);\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n\r\n        if (err.error) {\r\n          if (err?.error?.errors?.code === 'NotAuthorizedException' || err?.error?.errors?.email === 'notFound') {\r\n            this.alertService.error('Invalid Credentials');\r\n          } else {\r\n            this.alertService.error('System Error, Please try after sometime');\r\n          }\r\n        }\r\n        this.submitStatus = 'LOGIN';\r\n        this.submitSecretStatus = 'Submit Secret Code';\r\n      }\r\n    );\r\n    this.route.queryParams.pipe(\r\n      takeUntil(this.destory$),\r\n      filter((params:any)=>!!params.email),\r\n    ).subscribe((params: any) => {\r\n        this.loginForm.patchValue({\r\n          email: params.email,\r\n        })\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.destory$.next();\r\n    this.destory$.complete();\r\n  }\r\n  initializeForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.pattern(AppConstants.regexEmail)]],\r\n      password: ['', Validators.required],\r\n      conditions: ['', Validators.required]\r\n    });\r\n  }\r\n  initializeOtpForm() {\r\n    this.otpForm = this.fb.group({\r\n      otp: ['', Validators.required]\r\n    });\r\n  }\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg', backdrop: 'static' }).result.then(\r\n      result => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      },\r\n      reason => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      }\r\n    );\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n  login(otp?: string) {\r\n    this.submitStatus = 'Please wait ...';\r\n    this.submitSecretStatus = 'Please wait ...';\r\n    this.errorStatus = '';\r\n    const loginform = this.loginForm.getRawValue();\r\n    this.authService.login(loginform.email, loginform.password, otp).subscribe(\r\n      (res: any) => {\r\n        if (res) {\r\n          console.log(res);\r\n          if (res === 'MFA_CODE_SEND') {\r\n            console.log('Request MFA Code...');\r\n            this.isOtpSent = true;\r\n            this.initializeOtpForm();\r\n            this.submitSecretStatus = 'Submit Secret Code';\r\n            return;\r\n          }\r\n          else if (res?.data?.action === AppConstants.tempPasswordReset) {\r\n            const queryParams = {\r\n              isTempPassword: true,\r\n            };\r\n            this._router.navigate(['/change-password'], { queryParams });\r\n          } else if (res?.data?.action === AppConstants.passwordExpired) {\r\n            this.passwordExpired.emit('change-password');\r\n            this._router.navigate(['/change-password']);\r\n          } else {\r\n            if (this.LOGININFO.DONT_GET_USERINFO) {\r\n              if(this.LOGININFO['ENABLE_MFA']){\r\n                this.isOTP = true;\r\n                this.loginSuccessful.emit(res[0]);\r\n              }\r\n            } else {\r\n              this.getUserInfo();\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n\r\n        if (error.error) {\r\n          if (error?.error?.errors?.code === 'NotAuthorizedException' || error?.error?.errors?.email === 'Not Found') {\r\n            this.alertService.error(error?.error?.message || 'Invalid Email or Password');\r\n          } else this.alertService.error(error?.error?.error || 'Invalid Email or Password');\r\n        } else {\r\n          this.alertService.error(error?.error?.error || 'Invalid Email or Password');\r\n        }\r\n        this.submitStatus = 'LOGIN';\r\n      }\r\n    );\r\n  }\r\n\r\n  verifyOtp() {\r\n    this.verifyingOtp.emit(this.enterOTP);\r\n  }\r\n\r\n  sendOtp() {\r\n    const otpFormDetails = this.otpForm.getRawValue();\r\n    this.login(otpFormDetails.otp);\r\n  }\r\n\r\n  toggleShow() {\r\n    this.show = !this.show;\r\n    if (this.show) {\r\n      this.input.nativeElement.type = 'text';\r\n    } else {\r\n      this.input.nativeElement.type = 'password';\r\n    }\r\n  }\r\n\r\n  routeToChangePassword() {\r\n    this._router.navigate(['/forgot-password']);\r\n  }\r\n\r\n  getUserInfo() {\r\n    this.authService.getAuthMe().subscribe(\r\n      (res: any) => {\r\n        if (res.data) {\r\n          sessionStorage.setItem('orgid', res.data.organizationid);\r\n          this.authService.getUserRole(res.data.id).subscribe(userInfo => {\r\n            if(this.LOGININFO['ENABLE_MFA']){\r\n              this.isOTP = true;\r\n              this.userEmail = userInfo?.data;\r\n              this.httpServie.post('/verify-otp/sendotp',{email:userInfo?.data?.email}).subscribe();\r\n            } else {\r\n              this.isOTP = false;\r\n              this.profileService.setUserPreference();\r\n              sessionStorage.setItem('user', JSON.stringify(userInfo.data));\r\n              const landingPage = userInfo.data.userroles[0].defaultpage;\r\n              sessionStorage.setItem('currentPage', JSON.stringify(landingPage));\r\n              this.appService.addValue('currentPage', landingPage);\r\n              this.routeToDynamicPage(landingPage);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  routeToDynamicPage(landingPage: any) {\r\n    const orgid = sessionStorage.getItem('orgid');\r\n    if (landingPage.route.includes('dynamic-search/search')) {\r\n      const pageId = landingPage.route.split('/')[4];\r\n      if (pageId) {\r\n        this.authService.checkDynamicPagePermission(pageId);\r\n      } else {\r\n        this.authService.routeToDynamicPage(orgid).subscribe(res => {\r\n          if (res && res.data.length) {\r\n            const authorisedPages = res?.data?.filter(a => a?.activeVersion?.gridconfig);\r\n            this.localstorage.setItem('selectedDynamicPage', authorisedPages[0]?.activeVersion?.id);\r\n            this.conditionAuthorisedPages(authorisedPages);\r\n          } else {\r\n            this.alertService.error(\r\n              'You don\\'t have permissions to perform the following operations .Please Contact Administrator'\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      const landingPageRoute = `pages${landingPage?.route}`;\r\n      this._router.navigate([landingPageRoute]);\r\n      this.localstorage.setItem('dashboardRoute', landingPageRoute);\r\n    }\r\n  }\r\n  conditionAuthorisedPages(authorisedPages) {\r\n    if (authorisedPages && authorisedPages.length && authorisedPages[0]?.activeVersion?.gridconfig) {\r\n      const gridPageRoute = `pages/dynamic-search/search/${authorisedPages[0]?.activeVersion?.id}`;\r\n      this._router.navigate([gridPageRoute]);\r\n      this.localstorage.setItem('dashboardRoute', gridPageRoute);\r\n    }\r\n  }\r\n  gotoRegistrationPage(){\r\n    window.open(this.LOGININFO['PARTICIPANT_REGISTRATION_LINK'], '_blank');\r\n  }\r\n  getSessionDetails() {\r\n    let getToken = window.location.hash;\r\n    if(getToken.includes('#state=')) {\r\n      const currentUrl = new URL(window.location.href.replace(/#/g,\"?\"));\r\n      const stateKey = currentUrl.searchParams.get(\"state\");\r\n      const authCode = currentUrl.searchParams.get(\"code\");\r\n      const token = currentUrl.searchParams.get(\"id_token\");\r\n      let requestObject = {\r\n        key: stateKey,\r\n        code: authCode\r\n      }\r\n      this.authService.validateToken(token,requestObject).subscribe(\r\n        (res: any) => {\r\n          if (res) {\r\n            this.getUserInfo();\r\n          }\r\n        },\r\n        error => {\r\n          if (error.error) {\r\n            if (error?.error?.errors?.code === 'NotAuthorizedException' || error?.error?.errors?.email === 'notFound') {\r\n              this.alertService.error(AppConstants.regexEmail);\r\n            } else this.alertService.error(error?.error?.error || AppConstants.errorMessage);\r\n          }\r\n          this.submitStatus = 'LOGIN';\r\n        }\r\n      );\r\n    }\r\n  }\r\n  generateLoginUrl() {\r\n    this.authService.generateLoginUrl().subscribe((res:any) => {\r\n      window.open(res?.data, '_self' )\r\n    });\r\n  }\r\n}\r\n","<app-alert></app-alert>\r\n<div class=\"row login\" id=\"back\">\r\n  <div class=\"d-none d-lg-flex flex-column col-lg-7 align-i p-0 banner-sec justify-content-center container-image\"\r\n    [style.background-image]=\"'url(' + (LOGININFO['BACKGROUND_IMAGE'] ? LOGININFO['BACKGROUND_IMAGE'] :'assets/images/indiana/indiana-login-banner.png') + ')'\">\r\n    <div class=\"bannerCont clearfix\">\r\n      <img [src]=\"LOGININFO['BANNER_LOGO'] || 'assets/images/ga-brain/ga-brain-spinal-logo.png'\">\r\n      <div *ngIf=\"LOGININFO['BANNER_TITLE']\" [innerHTML]=\"LOGININFO['BANNER_TITLE']\"></div>\r\n      <h2 *ngIf=\"!LOGININFO['BANNER_TITLE']\">BRAIN and SPINAL INJURY TRUST FUND COMMISSION</h2>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex col-lg-5 d-flex justify-content-center align-items-center rightLoginSet\">\r\n    <div class=\"col-12 col-sm-12 shadow col-lg-9 px-2\">\r\n      <div class=\"text-left logo-group lg-mb-50\">\r\n        <div class=\"form-group mb-4\">\r\n          <div class=\"logo-group\">\r\n            <span class=\"logo-img\">\r\n              <img [attr.src]=\"LOGININFO['BANNER'] ? LOGININFO['BANNER'] :'assets/images/indiana/indiana-logo-2.png'\"\r\n                class=\"cfaLogoTop logo-img cfaLogoTopSmall\" width=\"300\" alt=\"Indiana Department of Health\" />\r\n              <div *ngIf=\"LOGININFO['TITLE']\" [innerHTML]=\"LOGININFO['TITLE']\" class=\"mt-3 mb-3\">\r\n              </div>\r\n              <h5 class=\"mt-3 mb-3 font-weight-bold\" *ngIf=\"!LOGININFO['TITLE']\">{{ 'Maternal and Child Health Data System'}}</h5>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"loginBottomSet clearfix\">\r\n        <div class=\"login-content mb-3\">\r\n          <form (ngSubmit)=\"login()\" novalidate [formGroup]=\"loginForm\">\r\n            <div class=\"clearfix\" *ngIf=\"!isOTP\">\r\n              <div class=\"form-group mb-3\">\r\n                <label aria-labelledby=\"username\" for=\"username\" class=\"intake-form-labels\">Email</label>\r\n                <input class=\"Inputs\" autofocus type=\"mail\" formControlName=\"email\" placeholder=\"Email\" name=\"email\"\r\n                  id=\"username\" tabindex=\"0\" required />\r\n              </div>\r\n              <div class=\"form-group no-mar mb-3\">\r\n                <label aria-labelledby=\"password\" for=\"password\" class=\"intake-form-labels w-100\">Password</label>\r\n                <div class=\"position-relative\">\r\n                  <input class=\"Inputs password\" #showhideinput formControlName=\"password\" type=\"password\"\r\n                    placeholder=\"Password\" name=\"password\" id=\"password\" tabindex=\"0\" required />\r\n                  <em class=\"pi\" [ngClass]=\"{ 'pi-eye': show, 'pi-eye-slash': !show }\" aria-hidden=\"true\"\r\n                    (click)=\"toggleShow()\"></em>\r\n                </div>\r\n                <!-- <i class=\"fa fa-eye\" aria-hidden=\"true\" (click)=\"toggleShow()\"></i> -->\r\n                <div class=\"text-right\" *ngIf=\"LOGININFO['ENABLE_FORGOT_PASSWORD']\">\r\n                  <a href=\"javascript:void(0)\" (click)=\"routeToChangePassword()\" class=\"btn-link forget\">\r\n                    Forgot Password?</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group clearfix mb-30 clsMin-23 pt-10\">\r\n                <div class=\"checkbox\">\r\n                  <p-checkbox class=\"checklabelbox\" name=\"conditions\" formControlName=\"conditions\" value=\"yes\"\r\n                    inputId=\"ch\" aria-checked=\"false\">\r\n                  </p-checkbox>\r\n                  <label class=\"checklabel\" for=\"ch\">I accept the <a href=\"javascript:void(0)\"\r\n                      (click)=\"open(content)\">terms &amp; conditions</a></label>\r\n                </div>\r\n              </div>\r\n              <div class=\"clearfix text-center col-md-12 col-12 mt-4\">\r\n                <p-button role=\"button\" type=\"submit\" title=\"Login\" [disabled]=\"!loginForm.valid\"\r\n                  styleClass=\"w-100 align-items-center justify-content-center d-block mb-2\" class=\"loginbutton w-100\"\r\n                  tabindex=\"0\">{{ submitStatus }}</p-button>\r\n                <!-- <div class=\"\">\r\n                  <p>Participant Register?<a href=\"javascript:void(0);\" class=\"text-primary pl-10\"\r\n                      *ngIf=\"LOGININFO['REGISTRATION_ENABLE'] ? LOGININFO['REGISTRATION_ENABLE'] : false\"\r\n                      style=\"text-decoration: none;\" (click)=\"gotoRegistrationPage()\">Click here</a></p>\r\n                </div> -->\r\n                <div class=\"\">\r\n                  <p>Applicant Register?<a href=\"javascript:void(0);\" class=\"text-primary pl-10\"\r\n                      style=\"text-decoration: none;\" routerLink=\"/registration\">Click here</a></p>\r\n                </div>\r\n              </div>\r\n              <div class=\"mar-btm-20 picslogin\"\r\n                *ngIf=\"LOGININFO['LOGINWITH_AZURE'] ? LOGININFO['LOGINWITH_AZURE'] : false\"><span>Or</span></div>\r\n              <div class=\"clearfix text-center col-md-12 col-12 mt-2\"\r\n                *ngIf=\"LOGININFO['LOGINWITH_AZURE'] ? LOGININFO['LOGINWITH_AZURE'] : false\">\r\n                <p-button role=\"button\" type=\"button\" title=\"Login with Azure\" class=\"loginbutton\" tabindex=\"0\"\r\n                  (click)=\"generateLoginUrl()\">Login with Azure</p-button>\r\n              </div>\r\n            </div>\r\n            <div class=\"clearfix\" *ngIf=\"LOGININFO['ENABLE_MFA'] && isOTP\">\r\n              <div class=\"form-group\">\r\n                <label aria-labelledby=\" \" for=\"otp\" class=\"intake-form-labels\">One Time Password</label>\r\n                <input\r\n                  class=\"Inputs\"\r\n                  autofocus\r\n                  type=\"text\" \r\n                  [ngModelOptions]=\"{ standalone: true }\"\r\n                  [(ngModel)]=\"enterOTP\"\r\n                  placeholder=\"Enter OTP\"\r\n                  name=\"otp\"\r\n                  id=\"otp\"\r\n                  tabindex=\"0\"\r\n                  required />\r\n              </div>\r\n              <div class=\"clearfix text-center col-12 mt-4\">\r\n                <p-button\r\n                  role=\"button\"\r\n                  type=\"button\"\r\n                  title=\"Login\" \r\n                  [disabled]=\"!enterOTP\" \r\n                  (click)=\"verifyOtp()\"\r\n                  styleClass=\"w-100 d-block mb-2\"\r\n                  class=\"loginbutton w-100\"\r\n                  tabindex=\"0\"\r\n                  >Submit</p-button>\r\n                </div>\r\n            </div> \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"powered\">\r\n      <p class=\"clsInfo-text mt-0 text-center\">\r\n        <span style=\"font-size: 13px\"> Powered by </span>\r\n        <a href=\"https://www.cardinality.ai/\" rel=\"noopener\" role=\"link\" target=\"_blank\" tabindex=\"0\">\r\n          <img alt=\"cardinality\" class=\"Cardinality_logo\" src=\"assets/images/cardinality-logo_text.svg\" width=\"120\" />\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\r\n      BRAIN and SPINAL INJURY TRUST FUND COMMISSIONS Terms &amp; conditions\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body termscondition\">\r\n    <p class=\"mb-2\">\r\n      These Terms and Conditions constitute a legally binding agreement (“Agreement”) made between you, whether\r\n      personally as a professional, or on behalf of an entity you represent (“You” or “Customer”) and Cardinality.AI\r\n      whose principal place of business is U.S.A, (“Cardinality”, “we,” “us” or “our”), concerning your access to\r\n      and contracting a PICS offering (“Product”).\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You agree that by contracting our Product, you have read, understood, and agree to be bound by these Terms and\r\n      Conditions, which may be executed via electronic signature, electronic online communications, or via emailed\r\n      PDF-format document.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You confirm that you are fully able and entitled to accept these Terms and Conditions governing the purchase of\r\n      the Product and are authorized to do so on behalf of the Customer. This service is only available for\r\n      professionals and companies, and you represent that you are not a consumer or a minor.\r\n    </p>\r\n    <p class=\"mt-4 mb-2\">\r\n      <strong>CONFIDENTIALITY AGREEMENT</strong>\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You agree that you shall maintain strictly confidential, and shall not reveal nor by any means transfer to a third\r\n      party, or use any and all information related to the Services, products, materials, and prototypes, and any\r\n      technical documentation that forms part of the Know-how of Product, or that it has received from third parties, or\r\n      any other information to which you have access by virtue of accepting these terms.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You may not use our products for any illegal or unauthorized purpose nor may you, in the use of the Service,\r\n      violate any laws in your jurisdiction (including but not limited to copyright laws).\r\n    </p>\r\n    <p class=\"mt-4 mb-2\">\r\n      <strong>DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY</strong>\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      We do not guarantee, represent or warrant that your use of our service will be uninterrupted, timely, secure or\r\n      error-free.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      We do not warrant that the results that may be obtained from the use of the service will be accurate or reliable.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You agree that from time to time we may remove the service for indefinite periods of time or cancel the service at\r\n      any time, without notice to you.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You expressly agree that your use of, or inability to use, the service is at your sole risk. The service and all\r\n      products and services delivered to you through the service are (except as expressly stated by us) provided ‘as is’\r\n      and ‘as available’ for your use, without any representation, warranties or conditions of any kind, either express\r\n      or implied, including all implied warranties or conditions of merchantability, merchantable quality, fitness for a\r\n      particular purpose, durability, title, and non-infringement.\r\n    </p>\r\n    <p class=\"mt-4 mb-2\">\r\n      <strong>INDEMNIFICATION</strong>\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      You agree to indemnify, defend and hold harmless Cardinality.AI and our parent, subsidiaries, affiliates,\r\n      partners, officers, directors, agents, contractors, licensors, service providers, subcontractors, suppliers,\r\n      interns and employees, harmless from any claim or demand, including reasonable attorneys’ fees, made by any\r\n      third-party due to or arising out of your breach of these Terms of Service or the documents they incorporate by\r\n      reference or your violation of any law or the rights of a third-party.\r\n    </p>\r\n    <p class=\"mt-4 mb-2\">\r\n      <strong>SEVERABILITY</strong>\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      If any provision of these Terms of Service is determined to be unlawful, void, or unenforceable, such provision\r\n      shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion\r\n      shall be deemed to be severed from these Terms of Service, such determination shall not affect the validity and\r\n      enforceability of any other remaining provisions.\r\n    </p>\r\n    <p class=\"mt-4 mb-2\"><strong>GOVERNING LAW</strong></p>\r\n    <p class=\"mb-2\">\r\n      These Terms shall be governed and construed in accordance with the laws of United States, without regard\r\n      to its conflict of law provisions.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      Our failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If\r\n      any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these\r\n      Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and\r\n      supersede and replace any prior agreements we might have had between us regarding the Service.\r\n    </p>\r\n    <p class=\"mt-4 mb-2\"><strong>CHANGES</strong></p>\r\n    <p class=\"mb-2\">\r\n      We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a revision is\r\n      material we will provide at least 30 days notice prior to any new terms taking effect. What constitutes a material\r\n      change will be determined at our sole discretion.\r\n    </p>\r\n    <p class=\"mb-2\">\r\n      By continuing to access or use our Service after any revisions become effective, you agree to be bound by the\r\n      revised terms. If you do not agree to the new terms, you are no longer authorized to use the Service.\r\n    </p>\r\n\r\n    <p class=\"mt-4 mb-2\"><strong>CONTACT US</strong></p>\r\n    <p class=\"mb-2\">If you have any questions about these Terms, please contact us.</p>\r\n  </div>\r\n</ng-template>","import { Component,EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { RBACINFO } from './pics-login/@core/urls/rbac-url.config';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionStore } from './pics-login/@core/permissions/permission.store';\r\nimport { DataStoreService } from './pics-login/@core/service/data-store.service';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'login',\r\n  template: `\r\n   <lib-login [RBACORG]=\"RBACORG\" [LOGININFO]=\"LOGININFO\" (passwordExpired)=\"onPasswordExpired($event)\" (loginSuccessful)=\"onLoginSuccessful($event)\" (verifyingOtp)=\"onVerifyingOtp($event)\"></lib-login>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION?: any;\r\n  @Input() public LOGININFO?: any;\r\n  @Input() public loginEvent!: Observable<any>;\r\n  @Output() libOnPasswordExpired = new EventEmitter();\r\n  @Output() libOnLoginSuccessful = new EventEmitter();\r\n  @Output() libOnVerifyingOtp = new EventEmitter();\r\n  constructor(\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n     this.loginEvent.subscribe((val: any) => {\r\n      const payload = {...val.LOGININFO};\r\n      payload.BANNER_TITLE = this.sanitizer.bypassSecurityTrustHtml(payload.BANNER_TITLE);\r\n      payload.TITLE = this.sanitizer.bypassSecurityTrustHtml(payload.TITLE);\r\n      this.RBACORG = val.RBACORG;\r\n      this.PERMISSION = payload;\r\n      this.LOGININFO = payload;\r\n      this._storeservice.setData('RBACORG', this.RBACORG);\r\n      this.permissionStore.setStore(this.PERMISSION);\r\n    })\r\n  }\r\n  onPasswordExpired($event) {\r\n    this.libOnPasswordExpired.emit($event);\r\n  }\r\n  onLoginSuccessful($event) {\r\n    this.libOnLoginSuccessful.emit($event);\r\n  }\r\n  onVerifyingOtp($event) {\r\n    this.libOnVerifyingOtp.emit($event);\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertService } from './alert.service';\r\nimport { DataStoreService } from './data-store.service';\r\nimport { PermissionStore } from './../permissions/permission.store';\r\n\r\ndeclare const microstrategy: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MicrostrategyService {\r\n  dossierList: any;\r\n  RBACORG: any;\r\n  environment: any;\r\n  constructor(private http: HttpClient,\r\n    private alertService: AlertService,\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n          if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.environment = this.RBACORG['environment'] ? this.RBACORG['environment'] : '';\r\n        }\r\n      });\r\n    }\r\n\r\n  getAuthToken() {\r\n    const body = {\r\n      username: this.environment.mstrUsername,\r\n      password: this.environment.mstrPassword,\r\n      loginMode: 1\r\n    };\r\n    return this.http.post(`${this.environment.mstrURL}/api/auth/login`, body, {\r\n      withCredentials: true,\r\n      headers: { 'Content-type': 'application/json' },\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getDossier(projectId?: string, dossierId?: string, pageNo?: string) {\r\n    const permissions = this.permissionStore.state;\r\n    const projectUrl = `${this.environment.mstrURL}/app/${projectId}`;\r\n    const dossierUrl = `${projectUrl}/${dossierId}/${pageNo}`;\r\n     microstrategy.dossier\r\n      .create({\r\n        placeholder: document.getElementById('dossierContainer'),\r\n        url: dossierUrl,\r\n        navigationBar: {\r\n          enabled: true,\r\n          gotoLibrary: permissions?.ANA_LIBRARY,\r\n          title: true,\r\n          toc: true,\r\n          reset: true,\r\n          reprompt: true,\r\n          share: true,\r\n          comment: true,\r\n          notification: true,\r\n          filter: true,\r\n          options: true,\r\n          search: true,\r\n          bookmark: true\r\n        },\r\n        enableCustomAuthentication: true,\r\n        enableResponsive: false,\r\n        containerWidth: 400,\r\n        containerHeight: 400,\r\n        customAuthenticationType: microstrategy.dossier.CustomAuthenticationType.AUTH_TOKEN,\r\n        getLoginToken: async () => {\r\n          const response = await this.getAuthToken().toPromise();\r\n          return response.headers.get('x-mstr-authtoken');\r\n        }\r\n      })\r\n      .catch((_err: any) => this.alertService.error(`Failed to connect ${this.environment.mstrURL}`));\r\n  }\r\n\r\n  async getLibraryDetails() {\r\n    const token = await this.getAuthToken().toPromise();\r\n    const authtoken = token.headers.get('x-mstr-authtoken')\r\n    const headerInfo = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'X-MSTR-AuthToken': authtoken ? authtoken: '',\r\n      'X-MSTR-ProjectID': this.environment.mstrProjectID\r\n    };\r\n    return this.http\r\n      .get(`${this.environment.mstrURL}/api/library`, {\r\n        withCredentials: true,\r\n        headers: headerInfo\r\n      })\r\n      .toPromise()\r\n      .then((response: any) => {\r\n        return response.map((mstr: any) => ({\r\n          id: mstr.target.id,\r\n          projectId: mstr.projectId,\r\n          name: mstr.target.name\r\n        }));\r\n      });\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[fieldKey]'\r\n})\r\nexport class PermissionDirective implements AfterViewInit {\r\n  @Input() fieldKey!: string;\r\n  permissions: any;\r\n  constructor(\r\n    private readonly renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dataStore: PermissionStore\r\n  ) {\r\n  }\r\n  ngAfterViewInit() {\r\n    const permissions =  this.dataStore.state;\r\n     if (permissions) {\r\n      if (!permissions[this.fieldKey]) {\r\n        const template = this.elementRef.nativeElement;\r\n        if (template.tagName === 'A') {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.href = 'javascript:void(0);';\r\n            r['disabled'] = true;\r\n            r.className = template.className;\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else if (\r\n          template.tagName === 'P-MULTISELECT' ||\r\n          template.tagName === 'P-DROPDOWN' ||\r\n          template.tagName === 'P-CHECKBOX' ||\r\n          template.tagName === 'P-TREESELECT' ||\r\n          template.tagName === 'P-RADIOBUTTON' ||\r\n          template.tagName === 'P-CALENDAR'\r\n        ) {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.className = template.className;\r\n            r.className += ' p-disabled';\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else {\r\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\r\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\r\n            'input, select, textarea, button, a, ng-select, div, lable'\r\n          );\r\n          childInputNodes.forEach((elem: any) => {\r\n            this.renderer.setAttribute(elem, 'disabled', 'true');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n@Directive({\r\n  selector: '[showField]'\r\n})\r\nexport class ShowFieldDirective implements OnInit {\r\n  @Input() showField!: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private dataStore: PermissionStore\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const permissions = this.dataStore.state;\r\n    if (!permissions || !permissions[this.showField]) {\r\n      this.viewContainer.clear();\r\n    } else {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n      const lookupIds = sessionStorage.getItem('LOOKUP_IDS');\r\n      if (lookupIds) {\r\n        const lookupIdArray = lookupIds.split(',');\r\n        Object.entries(permissions)\r\n          .filter(item => item[0].startsWith('GALKP_'))\r\n          .forEach(([key, value]) => {\r\n            for (const _value of <[]>value) {\r\n              const _key = key.replace('GALKP_', '');\r\n              if (\r\n                _key === this.showField &&\r\n                lookupIdArray.includes(String(_value['lookupid'])) &&\r\n                _value['action'] === 'H'\r\n              ) {\r\n                this.viewContainer.clear();\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionDirective } from './permission.directive';\r\nimport { ShowFieldDirective } from './show-field.directives';\r\n\r\n@NgModule({\r\n  declarations: [PermissionDirective, ShowFieldDirective],\r\n  imports: [CommonModule],\r\n  exports: [PermissionDirective, ShowFieldDirective]\r\n})\r\nexport class DirectivesModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DirectivesModule } from './@core/directives/directives.module';\r\nimport { AlertModule } from './@shared/alert/alert.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TreeSelectModule,\r\n    HttpClientModule,\r\n    CheckboxModule,\r\n    DropdownModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    AccordionModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    SidebarModule,\r\n    ContextMenuModule,\r\n    ConfirmPopupModule,\r\n    DirectivesModule,\r\n    AlertModule\r\n  ],\r\n  exports: [\r\n    LoginComponent\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class PicsLoginModule { }\r\n","/**\r\n * Simple logger system with the possibility of registering custom outputs.\r\n *\r\n * 4 different log levels are provided, with corresponding methods:\r\n * - debug   : for debug information\r\n * - info    : for informative status of the application (success, ...)\r\n * - warning : for non-critical errors that do not prevent normal application behavior\r\n * - error   : for critical errors that prevent normal application behavior\r\n *\r\n * Example usage:\r\n * ```\r\n * import { Logger } from 'app/core/logger.service';\r\n *\r\n * const log = new Logger('myFile');\r\n * ...\r\n * log.debug('something happened');\r\n * ```\r\n *\r\n * To disable debug and info logs in production, add this snippet to your root component:\r\n * ```\r\n * export class AppComponent implements OnInit {\r\n *   ngOnInit() {\r\n *     if (environment.production) {\r\n *       Logger.enableProductionMode();\r\n *     }\r\n *     ...\r\n *   }\r\n * }\r\n *\r\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\r\n */\r\n\r\n/**\r\n * The possible log levels.\r\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\r\n */\r\nexport enum LogLevel {\r\n  Off = 0,\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug\r\n}\r\n\r\n/**\r\n * Log output handler function.\r\n */\r\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\r\n\r\nexport class Logger {\r\n  /**\r\n   * Current logging level.\r\n   * Set it to LogLevel.Off to disable logs completely.\r\n   */\r\n  static level = LogLevel.Debug;\r\n\r\n  /**\r\n   * Additional log outputs.\r\n   */\r\n  static outputs: LogOutput[] = [];\r\n\r\n  /**\r\n   * Enables production mode.\r\n   * Sets logging level to LogLevel.Warning.\r\n   */\r\n  static enableProductionMode() {\r\n    Logger.level = LogLevel.Warning;\r\n  }\r\n\r\n  constructor(private source?: string) {}\r\n\r\n  /**\r\n   * Logs messages or objects  with the debug level.\r\n   * Works the same as console.log().\r\n   */\r\n  debug(...objects: any[]) {\r\n    this.log(console.log, LogLevel.Debug, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the info level.\r\n   * Works the same as console.log().\r\n   */\r\n  info(...objects: any[]) {\r\n    this.log(console.info, LogLevel.Info, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the warning level.\r\n   * Works the same as console.log().\r\n   */\r\n  warn(...objects: any[]) {\r\n    this.log(console.warn, LogLevel.Warning, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the error level.\r\n   * Works the same as console.log().\r\n   */\r\n  error(...objects: any[]) {\r\n    this.log(console.error, LogLevel.Error, objects);\r\n  }\r\n\r\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\r\n    if (level <= Logger.level) {\r\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\r\n      func.apply(console, log);\r\n      Logger.outputs.forEach(output => output.apply(output, [this.source, level, ...objects]));\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { CredentialsService } from './credentials.service';\r\nimport { Logger } from './logger.service';\r\n\r\nconst log = new Logger('AuthenticationGuard');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private credentialsService: CredentialsService) {}\r\n\r\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\r\n    if (this.credentialsService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n    log.debug('Not authenticated, redirecting and adding redirect url...');\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { LoginComponent } from './login.component';\r\nimport { PermissionStore } from './pics-login/@core/permissions/permission.store';\r\nimport { AlertService } from './pics-login/@core/service/alert.service';\r\nimport { AppService } from './pics-login/@core/service/app.service';\r\nimport { AuthService } from './pics-login/@core/service/auth.service';\r\nimport { DataStoreService } from './pics-login/@core/service/data-store.service';\r\nimport { DynamicTabPageService } from './pics-login/@core/service/dynamic-tab-page-service';\r\nimport { HttpService } from './pics-login/@core/service/http.service';\r\nimport { LocalStorageService } from './pics-login/@core/service/local-storage.service';\r\nimport { LocalService } from './pics-login/@core/service/local.service';\r\nimport { MicrostrategyService } from './pics-login/@core/service/microstrategy.service';\r\nimport { PageHeaderService } from './pics-login/@core/service/page-header.service';\r\nimport { ProfileService } from './pics-login/@core/service/profile.service';\r\nimport { ThemeService } from './pics-login/@core/service/theme.service';\r\nimport { PicsLoginModule } from './pics-login/pics-login.module';\r\nimport { AuthStore } from './pics-login/@core/service/auth.store';\r\nimport { CredentialsService } from './pics-login/@core/service/credentials.service';\r\nimport { AuthGuard } from './pics-login/@core/service/auth.guard';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    PicsLoginModule\r\n  ],\r\n  exports: [\r\n    LoginComponent\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthStore ,\r\n    AuthGuard,\r\n    ProfileService,\r\n    AppService,\r\n    CredentialsService,\r\n    DynamicTabPageService,\r\n    LocalStorageService,\r\n    LocalService,\r\n    MicrostrategyService,\r\n    PageHeaderService,\r\n    ThemeService,\r\n    HttpClient,\r\n    HttpService,\r\n    AlertService,\r\n    ConfirmationService,\r\n    PermissionStore,\r\n    DataStoreService]\r\n})\r\nexport class CardiLoginModule { }\r\n","/*\r\n * Public API Surface of login\r\n */\r\n\r\nexport * from './lib/login.service';\r\nexport * from './lib/login.component';\r\nexport * from './lib/login.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AccessManagementConfig","i2.DataStoreService","i1.HttpService","i2.ThemeService","i3.LocalService","i1","i2.HttpService","i2.AuthStore","i3","i4.CredentialsService","i5.LocalService","i1.AlertService","i2","LoginComponent","i5.AlertService","i6.AuthService","i7.HttpService","i8.AlertComponent","i1.PermissionStore","i4.LoginComponent","i2.AlertService","i3.PermissionStore","i4.DataStoreService","i2.CredentialsService"],"mappings":"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"}