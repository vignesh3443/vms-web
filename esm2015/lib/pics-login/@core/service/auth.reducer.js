import { authLogin, authLoginFailure, authLoginSuccess, authLogout } from './auth.actions';
import { createReducer, on } from '@ngrx/store';
export const initialState = {
    isAuthenticated: false,
    pages: []
};
const reducer = createReducer(initialState, on(authLogin, state => (Object.assign(Object.assign({}, state), { loading: true, error: null, isAuthenticated: false }))), on(authLoginSuccess, (state, { isAuthenticated }) => {
    console.log(isAuthenticated);
    return Object.assign(Object.assign({}, state), { loading: false, isAuthenticated, error: null });
}), on(authLoginFailure, (state, { isAuthenticated, error }) => (Object.assign(Object.assign({}, state), { loading: false, isAuthenticated,
    error }))), on(authLogout, state => (Object.assign(Object.assign({}, state), { loading: false, error: null, isAuthenticated: false }))));
export function authReducer(state, action) {
    return reducer(state, action);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGljcy1jb3JlL2xvZ2luL3NyYy9saWIvcGljcy1sb2dpbi9AY29yZS9zZXJ2aWNlL2F1dGgucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNGLE9BQU8sRUFBVSxhQUFhLEVBQUUsRUFBRSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBYztJQUNyQyxlQUFlLEVBQUUsS0FBSztJQUN0QixLQUFLLEVBQUUsRUFBRTtDQUNWLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRyxhQUFhLENBQzNCLFlBQVksRUFDWixFQUFFLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsaUNBQ2xCLEtBQUssS0FDUixPQUFPLEVBQUUsSUFBSSxFQUNiLEtBQUssRUFBRSxJQUFJLEVBQ1gsZUFBZSxFQUFFLEtBQUssSUFDdEIsQ0FBQyxFQUNILEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUU7SUFDbEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUM3Qix1Q0FDSyxLQUFLLEtBQ1IsT0FBTyxFQUFFLEtBQUssRUFDZCxlQUFlLEVBQ2YsS0FBSyxFQUFFLElBQUksSUFDWDtBQUNKLENBQUMsQ0FBQyxFQUNGLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsaUNBQ3ZELEtBQUssS0FDUixPQUFPLEVBQUUsS0FBSyxFQUNkLGVBQWU7SUFDZixLQUFLLElBQ0wsQ0FBQyxFQUNILEVBQUUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxpQ0FDbkIsS0FBSyxLQUNSLE9BQU8sRUFBRSxLQUFLLEVBQ2QsS0FBSyxFQUFFLElBQUksRUFDWCxlQUFlLEVBQUUsS0FBSyxJQUN0QixDQUFDLENBQ0osQ0FBQztBQUVGLE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBNEIsRUFBRSxNQUFjO0lBQ3RFLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNoQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IEF1dGhTdGF0ZSB9IGZyb20gJy4uL2NvbnN0YW50cy9jb21tb24uZW50aXRpZXMnO1xyXG5pbXBvcnQgeyBhdXRoTG9naW4sIGF1dGhMb2dpbkZhaWx1cmUsIGF1dGhMb2dpblN1Y2Nlc3MsIGF1dGhMb2dvdXQgfSBmcm9tICcuL2F1dGguYWN0aW9ucyc7XHJcbmltcG9ydCB7IEFjdGlvbiwgY3JlYXRlUmVkdWNlciwgb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbFN0YXRlOiBBdXRoU3RhdGUgPSB7XHJcbiAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZSxcclxuICBwYWdlczogW11cclxufTtcclxuXHJcbmNvbnN0IHJlZHVjZXIgPSBjcmVhdGVSZWR1Y2VyKFxyXG4gIGluaXRpYWxTdGF0ZSxcclxuICBvbihhdXRoTG9naW4sIHN0YXRlID0+ICh7XHJcbiAgICAuLi5zdGF0ZSxcclxuICAgIGxvYWRpbmc6IHRydWUsXHJcbiAgICBlcnJvcjogbnVsbCxcclxuICAgIGlzQXV0aGVudGljYXRlZDogZmFsc2VcclxuICB9KSksXHJcbiAgb24oYXV0aExvZ2luU3VjY2VzcywgKHN0YXRlLCB7IGlzQXV0aGVudGljYXRlZCB9KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhpc0F1dGhlbnRpY2F0ZWQpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4uc3RhdGUsXHJcbiAgICAgIGxvYWRpbmc6IGZhbHNlLFxyXG4gICAgICBpc0F1dGhlbnRpY2F0ZWQsXHJcbiAgICAgIGVycm9yOiBudWxsXHJcbiAgICB9O1xyXG4gIH0pLFxyXG4gIG9uKGF1dGhMb2dpbkZhaWx1cmUsIChzdGF0ZSwgeyBpc0F1dGhlbnRpY2F0ZWQsIGVycm9yIH0pID0+ICh7XHJcbiAgICAuLi5zdGF0ZSxcclxuICAgIGxvYWRpbmc6IGZhbHNlLFxyXG4gICAgaXNBdXRoZW50aWNhdGVkLFxyXG4gICAgZXJyb3JcclxuICB9KSksXHJcbiAgb24oYXV0aExvZ291dCwgc3RhdGUgPT4gKHtcclxuICAgIC4uLnN0YXRlLFxyXG4gICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICBlcnJvcjogbnVsbCxcclxuICAgIGlzQXV0aGVudGljYXRlZDogZmFsc2VcclxuICB9KSlcclxuKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhdXRoUmVkdWNlcihzdGF0ZTogQXV0aFN0YXRlIHwgdW5kZWZpbmVkLCBhY3Rpb246IEFjdGlvbik6IEF1dGhTdGF0ZSB7XHJcbiAgcmV0dXJuIHJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XHJcbn1cclxuIl19